{"version":3,"sources":["components/BarChart.js","components/ScatterplotGraph.js","App.js","serviceWorker.js","index.js"],"names":["BarChart","useEffect","svg","d3","append","attr","xScale","range","svgWidth","padding","yScale","svgHeight","xAxis","yAxis","g","tooltip","style","then","data","domain","map","d","indicesBetweenPoints","Math","round","length","call","tickFormat","split","tickValues","i","undefined","filter","item","ticks","text","selectAll","enter","bandwidth","on","transition","duration","html","pageX","pageY","drawChart","className","id","ScatterplotGraph","color","formatTime","forEach","Place","parsedTime","Time","Date","years","Year","tooltipDiv","toISOString","Doping","Name","Nationality","width","legend","height","App","props","openVis","vis","history","push","exact","path","render","Fragment","onClick","Boolean","window","location","hostname","match","ReactDOM","basename","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2f3a8a6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./BarChart.css\";\n\nexport default function BarChart() {\n  const drawChart = () => {\n    const padding = 200;\n    const svgWidth = 800;\n    const svgHeight = 600;\n    const width = svgWidth - padding;\n    const height = svgHeight - padding;\n\n    // Create svg container\n    const svg = d3\n      .select(\"#barchart\")\n      .append(\"svg\")\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight);\n\n    const xScale = d3\n      .scaleBand()\n      .range([0, width])\n      .padding(0.4);\n\n    const yScale = d3.scaleLinear().range([height, 0]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    // Create group\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${100},${100})`);\n\n    let tooltip = d3\n      .select(\"#barchart\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .attr(\"id\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    d3.json(\n      \"https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json\"\n    ).then(function(data) {\n      xScale.domain(data.data.map(d => d[0]));\n      yScale.domain([0, d3.max(data.data, d => d[1])]);\n\n      const indicesBetweenPoints = Math.round(data.data.length / 14);\n      g.append(\"g\")\n        .attr(\"id\", \"x-axis\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(\n          xAxis\n            .tickFormat(d => {\n              const date = d.split(\"-\");\n              return date[0];\n            })\n            .tickValues(\n              data.data\n                .map((d, i) =>\n                  i % indicesBetweenPoints === 0 ? d[0] : undefined\n                )\n                .filter(item => item)\n            )\n        );\n\n      g.append(\"g\")\n        .attr(\"id\", \"y-axis\")\n        .call(\n          yAxis\n            .tickFormat(function(d) {\n              return d;\n            })\n            .ticks(10)\n        )\n        .append(\"text\")\n        .attr(\"class\", \"ticks\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"0.71em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"value\");\n\n      g.selectAll(\".bar\")\n        .data(data.data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"data-date\", d => d[0])\n        .attr(\"data-gdp\", d => d[1])\n        .attr(\"x\", function(d) {\n          return xScale(d[0]);\n        })\n        .attr(\"y\", function(d) {\n          return yScale(d[1]);\n        })\n        .attr(\"width\", xScale.bandwidth())\n        .attr(\"height\", function(d) {\n          return height - yScale(d[1]);\n        })\n        .on(\"mouseover\", function(d) {\n          tooltip\n            .transition()\n            .duration(200)\n            .style(\"opacity\", 0.9);\n          tooltip\n            .html(d[0] + \": \" + d[1])\n            .style(\"left\", d3.event.pageX + 20 + \"px\")\n            .style(\"top\", d3.event.pageY + 20 + \"px\");\n          tooltip.attr(\"data-date\", d[0]);\n        })\n        .on(\"mouseout\", function(d) {\n          tooltip\n            .transition()\n            .duration(400)\n            .style(\"opacity\", 0);\n        });\n    });\n  };\n\n  useEffect(() => {\n    drawChart();\n  }, []);\n  return (\n    <div className=\"container\">\n      <header id=\"title\">\n        <h1>Bar Chart</h1>\n      </header>\n      <div id=\"barchart\"></div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./ScatterplotGraph.css\";\n\nexport default function ScatterplotGraph() {\n  const drawChart = () => {\n    const padding = 200;\n    const svgWidth = 900;\n    const svgHeight = 600;\n    const width = svgWidth - padding;\n    const height = svgHeight - padding;\n\n    const svg = d3\n      .select(\"#scatterplot\")\n      .append(\"svg\")\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight);\n\n    const xScale = d3.scaleLinear().range([0, width]);\n\n    const yScale = d3.scaleTime().range([0, height]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${100},${100})`);\n\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    d3.json(\n      \"https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json\"\n    ).then(function(data) {\n      const formatTime = d3.timeFormat(\"%M:%S\");\n\n      data.forEach(function(d) {\n        d.Place = +d.Place;\n        var parsedTime = d.Time.split(\":\");\n        d.Time = new Date(1970, 0, 1, 0, parsedTime[0], parsedTime[1]);\n      });\n\n      const years = data.map(d => d.Year);\n      xScale.domain([d3.min(years) - 1, d3.max(years) + 1]);\n\n      yScale.domain(\n        d3.extent(data, function(d) {\n          return d.Time;\n        })\n      );\n\n      const tooltipDiv = d3\n        .select(\"body\")\n        .append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .attr(\"id\", \"tooltip\")\n        .style(\"opacity\", 0);\n\n      g.append(\"g\")\n        .attr(\"id\", \"x-axis\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(xAxis.tickFormat(d3.format(\"d\")))\n        .append(\"text\")\n        .attr(\"class\", \"x-axis-label\")\n        .attr(\"x\", width)\n        .attr(\"y\", -6)\n        .style(\"text-anchor\", \"end\")\n        .text(\"Year\");\n\n      g.append(\"g\")\n        .attr(\"id\", \"y-axis\")\n        .call(yAxis.tickFormat(formatTime))\n        .append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Best Time (minutes)\");\n\n      g.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"data-xvalue\", d => d.Year)\n        .attr(\"data-yvalue\", d => {\n          return d.Time.toISOString();\n        })\n        .attr(\"cx\", function(d) {\n          return xScale(d.Year);\n        })\n        .attr(\"cy\", function(d) {\n          return yScale(d.Time);\n        })\n        .attr(\"r\", 6)\n        .style(\"fill\", function(d) {\n          return color(d.Doping !== \"\");\n        })\n        .on(\"mouseover\", function(d) {\n          tooltipDiv.style(\"opacity\", 0.9);\n          tooltipDiv.attr(\"data-year\", d.Year);\n          tooltipDiv\n            .html(\n              d.Name +\n                \": \" +\n                d.Nationality +\n                \"<br/>\" +\n                \"Year: \" +\n                d.Year +\n                \", Time: \" +\n                formatTime(d.Time) +\n                (d.Doping ? \"<br/><br/>\" + d.Doping : \"\")\n            )\n            .style(\"left\", d3.event.pageX + \"px\")\n            .style(\"top\", d3.event.pageY - 28 + \"px\");\n        })\n        .on(\"mouseout\", function(d) {\n          tooltipDiv.style(\"opacity\", 0);\n        });\n\n      //title\n      svg\n        .append(\"text\")\n        .attr(\"id\", \"title\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", 0 - padding / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"30px\")\n        .text(\"Doping in Professional Bicycle Racing\");\n\n      //subtitle\n      svg\n        .append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", 0 - padding / 2 + 25)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"20px\")\n        .text(\"35 Fastest times up Alpe d'Huez\");\n\n      const legend = svg\n        .selectAll(\".legend\")\n        .data(color.domain())\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"legend\")\n        .attr(\"id\", \"legend\")\n        .attr(\"transform\", function(d, i) {\n          return \"translate(0,\" + (height / 2 - i * 20) + \")\";\n        });\n\n      legend\n        .append(\"rect\")\n        .attr(\"x\", width - 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color);\n\n      legend\n        .append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"end\")\n        .text(function(d) {\n          if (d) return \"Riders with doping allegations\";\n          else {\n            return \"No doping allegations\";\n          }\n        });\n    });\n  };\n\n  useEffect(() => {\n    drawChart();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Scatterplot Graph</h1>\n      </header>\n      <div id=\"scatterplot\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport BarChart from \"./components/BarChart\";\nimport ScatterplotGraph from \"./components/ScatterplotGraph\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const openVis = vis => {\n    props.history.push(`/${vis}`);\n  };\n\n  return (\n    <div className=\"App\">\n      <Route\n        exact\n        path=\"/\"\n        render={props => (\n          <React.Fragment>\n            <header>D3 Visualizations</header>\n            <div className=\"visualization-selectors\">\n              <button className=\"button\" onClick={() => openVis(\"bar-chart\")}>\n                Bar Chart\n              </button>\n              <button\n                className=\"button\"\n                onClick={() => openVis(\"scatterplot-graph\")}\n              >\n                Scatterplot Graph\n              </button>\n            </div>\n          </React.Fragment>\n        )}\n      />\n      <Route path=\"/bar-chart\" render={props => <BarChart />} />\n      <Route path=\"/scatterplot-graph\" render={props => <ScatterplotGraph />} />\n    </div>\n  );\n}\n\nexport default () => (\n  <Router basename=\"/d3-visualizations\">\n    <Route component={App} />\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}